{"version":3,"sources":["api/api.js","setup.js","components/SearchableTable.jsx","components/SearchBar.jsx","components/OrganizationTable.jsx","components/EmployeeTable.jsx","pages/EmployeeEditor.jsx","pages/EmployeeList.jsx","components/TreeView.jsx","pages/EmployeeTree.jsx","pages/OrganizationEditor.jsx","pages/OrganizationList.jsx","pages/OrganizationTree.jsx","app/App.jsx","serviceWorker.js","index.jsx"],"names":["API","sendObject","entity","method","obj","fetch","body","JSON","stringify","headers","mode","sendParamsRequest","params","url","URL","Object","keys","forEach","key","undefined","search","URLSearchParams","toString","createEmployee","employee","createOrganization","organization","deleteEmployee","id","deleteOrganization","fetchEmployeeInfo","fetchOrganizationInfo","getEmployeeList","getOrganizationList","getEmployeeTree","getOrganizationTree","updateEmployee","updateOrganization","SearchableTable","props","componentDidMount","sendRequest","changeHandler","event","setState","target","value","pageChanged","newPage","page","elements","render","state","Box","margin","CircularProgress","Alert","component","severity","dataChunk","length","TableContainer","display","flexDirection","flexGrow","deleting","Dialog","onClose","reload","open","DialogContent","DialogContentText","message","Table","TableHead","TableRow","TableCell","align","selection","Radio","checked","selected","onChange","selectionChanged","header","map","column","label","deletion","TableBody","element","keyProvider","IconButton","Link","to","itemRedirection","disassemble","prop","onClick","deleteItem","TablePagination","count","totalCount","marginTop","onChangePage","onChangeRowsPerPage","rowsPerPageChanged","rowsPerPage","fetchCount","rowsPerPageOptions","countOptions","parseInt","startFetchCount","keyHandler","bind","handleResponse","handleDeletionResponse","prevProps","this","newProps","elementProvider","offset","limit","then","catch","error","response","status","json","data","newSelection","onSelectionChanged","removator","success","React","Component","useStyles","makeStyles","theme","inputRoot","color","width","inputInput","padding","spacing","transition","transitions","create","border","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","marginLeft","searchIcon","height","pointerEvents","alignItems","justifyContent","SearchBar","classes","className","InputBase","root","input","onKeyPress","placeholder","OrganizationTable","useState","exclude","setSearch","searchName","setSearchName","EmployeeTable","orgId","searchOrg","setSearchOrg","searchKeyPressed","EmployeeEditor","requestOrgInfo","handleResponseOnOrgInfo","requestChiefInfo","chief","handleResponseOnChiefInfo","nameChangeHandler","name","madeChanges","wrongName","tempChief","tempOrganization","selectedChiefChanged","selectedOrganizationChanged","orgBtnClicked","openOrgDialog","chiefBtnClicked","openChiefDialog","redirect","criticalError","waitingResponse","FormControl","TextField","helperText","Button","disabled","submit","onOrgDialogClose","maxWidth","DialogTitle","disassembleOrganization","orgHeader","onChiefDialogClose","disassembleEmployee","empHeader","updating","match","handleResponseOnInfoRequest","handleResponseOnSubmitRequest","prevState","requestParentInfo","parentId","parentName","organizationName","chiefName","withRouter","EmployeeList","TreeView","handleSelection","nodeIds","selectedNodes","handleToggle","nodeId","nodeExpanded","expandedNodes","redirectToItem","itemPathProvider","traverseNode","TreeItem","nodes","get","size","children","refreshNodeChildren","childId","traverseNodeIds","reduce","result","updateNodeError","Map","defaultCollapseIcon","defaultExpandIcon","expanded","onNodeSelect","onNodeToggle","expansionStates","handleChildrenResponse","updateNode","set","has","requestNodeChildren","prevChildren","newChildren","redundantNodeIds","Set","filter","includes","pair","node","child","elementStringifier","hasChildren","EmployeeTree","OrganizationEditor","parent","handleResponseOnParentInfo","wrongInput","tempParent","parentBtnClicked","selectedParentChanged","OrganizationList","employeeCount","OrganizationTree","createBtn","App","AppBar","position","Toolbar","NavLink","path","Card","minHeight","minWidth","Boolean","window","location","hostname","createMuiTheme","ruRU","ReactDOM","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.b22d89e2.chunk.js","sourcesContent":["import SERVER from '../setup';\n\nconst API = `${SERVER}/api`;\n\nconst cleanUp = obj => Object.keys(obj).forEach(key => obj[key] === undefined ? delete obj[key] : {});\n\nconst sendObject = (entity, method, obj) => fetch(`${API}/${entity}`, {\n    body: JSON.stringify(obj),\n    headers: { 'Content-Type': 'application/json' },\n    method: method,\n    mode: 'cors'\n});\n\nconst sendParamsRequest = (entity, method, params) => {\n    var url = new URL(`${API}/${entity}`);\n    cleanUp(params);\n    url.search = new URLSearchParams(params).toString();\n    return fetch(url, { method: method, mode: 'cors' });\n};\n\nexport const createEmployee = (employee) => sendObject('employees', 'POST', employee);\nexport const createOrganization = (organization) => sendObject('organizations', 'POST', organization);\n\nexport const deleteEmployee = (id) => sendParamsRequest('employees', 'DELETE', {id:id});\nexport const deleteOrganization = (id) => sendParamsRequest('organizations', 'DELETE', {id:id});\n\nexport const fetchEmployeeInfo = (id) => sendParamsRequest('employees', 'GET', {id:id});\nexport const fetchOrganizationInfo = (id) => sendParamsRequest('organizations', 'GET', {id:id});\n\nexport const getEmployeeList = (params) => sendParamsRequest('employees/list', 'GET', params);\nexport const getOrganizationList = (params) => sendParamsRequest('organizations/list', 'GET', params);\n\nexport const getEmployeeTree = (params) => sendParamsRequest('employees/tree', 'GET', params);\nexport const getOrganizationTree = (params) => sendParamsRequest('organizations/tree', 'GET', params);\n\nexport const updateEmployee = (employee) => sendObject('employees', 'PUT', employee);\nexport const updateOrganization = (organization) => sendObject('organizations', 'PUT', organization);","const SERVER=\"https://org-info-server.herokuapp.com\";\n\nexport default SERVER;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport IconButton from '@material-ui/core/IconButton';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport { Radio } from '@material-ui/core';\n\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport EditIcon from '@material-ui/icons/Edit';\n\nclass SearchableTable extends React.Component {\n    static propTypes = {\n        countOptions: PropTypes.array.isRequired,\n        deletion: PropTypes.bool.isRequired,\n        disassemble: PropTypes.func.isRequired,\n        elementProvider: PropTypes.func.isRequired,\n        itemRedirection: PropTypes.func,\n        header: PropTypes.array.isRequired,\n        keyProvider: PropTypes.func.isRequired,\n        removator: PropTypes.func,\n        search: PropTypes.object,\n        selection: PropTypes.bool.isRequired,\n        selected: PropTypes.string,\n        startFetchCount: PropTypes.number.isRequired,\n        onSelectionChanged: PropTypes.func\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            fetchCount: props.startFetchCount,\n            page: 0,\n            selected: props.selected\n        };\n        this.keyHandler = this.keyHandler.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.handleDeletionResponse = this.handleDeletionResponse.bind(this);\n        this.selectionChanged = this.selectionChanged.bind(this);\n    }\n\n    componentDidMount = () => this.sendRequest(); \n\n    componentDidUpdate(prevProps) {\n        if (typeof this.state.elements == \"undefined\")\n            this.sendRequest();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n        if (newProps.search !== this.props.search)\n            this.setState({elements: undefined});\n    }\n\n    sendRequest() {\n        this.props.elementProvider(\n            {\n                offset: typeof this.state.fetchCount != \"undefined\" ?\n                 this.state.page * this.state.fetchCount : undefined,\n                 limit: this.state.fetchCount,\n                ...this.props.search\n            })\n                .then(this.handleResponse)\n                .catch(error => this.setState({elements: false}));\n    } \n    \n    handleResponse(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => {\n                    this.setState({elements: json.data});\n                });\n                break;\n            }\n            default:\n                this.setState({elements: false});\n                break;\n        }\n    }\n\n    changeHandler = (event) => this.setState({search: event.target.value});\n\n    keyHandler(event) {\n        if (event.key === \"Enter\")\n            this.setState({page: 0, elements: undefined});\n    }\n    \n    pageChanged = (event, newPage) => this.setState({page: newPage, elements: undefined})\n\n    selectionChanged(event) {\n        const newSelection = event.target.value;\n        this.props.onSelectionChanged(newSelection);\n        this.setState({selected: newSelection});\n    }\n\n    deleteItem(id) {\n        this.setState({deleting: true});\n        this.props.removator(id)\n            .then(this.handleDeletionResponse)\n            .catch(error => this.setState({}));\n    }\n\n    handleDeletionResponse(response) {\n        switch (response.status) {\n            case 200: {\n                this.setState({deleting: {success: true, message: \"Элемент успешно удалён\", reload: true}});\n                break;\n            }\n            case 404: {\n                response.json().then(json => this.setState({deleting: {success: false, message: json.data, reload: true}}));\n                break;\n            }\n            case 422: {\n                response.json().then(json => this.setState({deleting: {success: false, message: json.data}}));\n                break;\n            }\n            default: {\n                this.setState({deleting: {success: false, message: \"При удалении элемента что-то внезапно пошло не так\"}});\n                break;\n            }\n        }\n    }\n\n    render = () =>\n            typeof this.state.elements == 'undefined' ? <Box margin=\"auto\"><CircularProgress /></Box> :\n            this.state.elements === false ? \n            <Alert component={Box} margin=\"auto\" severity=\"error\">\n                При загрузке элементов что-то пошло не так\n            </Alert> :\n            this.state.elements.dataChunk.length === 0 ? \n            <Alert component={Box} margin=\"auto\" severity=\"info\">\n                Ничего не найдено\n            </Alert> :\n            <TableContainer component={Box} display=\"flex\" flexDirection=\"column\" flexGrow=\"1\">\n                {\n                    typeof this.state.deleting == \"undefined\" ? null:\n                    this.state.deleting === true ? <Box margin=\"auto\"><CircularProgress /></Box> :\n                    <Dialog\n                        onClose={() => this.setState({deleting: undefined, elements: this.state.deleting.reload ? undefined : this.state.elements})}\n                        open={true}\n                    >\n                        <DialogContent>\n                            <DialogContentText>\n                                {this.state.deleting.message}\n                            </DialogContentText>\n                        </DialogContent>\n                    </Dialog>\n                }\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell align=\"center\" key=\"tools\">\n                                { \n                                    this.props.selection ? \n                                    <Radio\n                                        checked={!this.state.selected}\n                                        onChange={this.selectionChanged}\n                                        value=\"\"\n                                    />:\n                                    null\n                                }\n                            </TableCell>\n                            { this.props.header.map(column => <TableCell align=\"center\" key={column.id}>{column.label}</TableCell>) }\n                            { this.props.deletion ? <TableCell align=\"center\" key=\"deletion\" /> : null }\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {\n                            this.state.elements.dataChunk.map(element =>\n                                <TableRow key={this.props.keyProvider(element)}>\n                                    <TableCell align=\"center\" key=\"tools\">\n                                        { \n                                            this.props.selection ? \n                                            <Radio\n                                                checked={this.state.selected === this.props.keyProvider(element)}\n                                                onChange={this.selectionChanged}\n                                                value={this.props.keyProvider(element)}\n                                            />:\n                                            <IconButton component={Link} to={this.props.itemRedirection(element)}>\n                                                <EditIcon />\n                                            </IconButton>\n                                        }\n                                    </TableCell>\n                                    { this.props.disassemble(element).map(prop => <TableCell align=\"center\" key={prop.id}>{prop.value}</TableCell>) }\n                                    { \n                                        this.props.deletion ? \n                                        <TableCell align=\"center\" key=\"deletion\">\n                                            <IconButton onClick={() => this.deleteItem(this.props.keyProvider(element))}>\n                                                <DeleteForeverIcon />\n                                            </IconButton>\n                                        </TableCell> : \n                                        null \n                                    }\n                                </TableRow>\n                            )\n                        }\n                    </TableBody>\n                </Table>\n                <TablePagination\n                    component={Box}\n                    count={this.state.elements.totalCount}\n                    marginTop=\"auto\"\n                    onChangePage={this.pageChanged}\n                    onChangeRowsPerPage={this.rowsPerPageChanged}\n                    page={this.state.page} \n                    rowsPerPage={this.state.fetchCount}\n                    rowsPerPageOptions={this.props.countOptions} \n                />\n            </TableContainer>;\n    \n    rowsPerPageChanged = (event) => this.setState({\n        elements: undefined, \n        fetchCount: parseInt(event.target.value, 10), \n        page: 0 \n    });\n};\n\nexport default SearchableTable;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InputBase from '@material-ui/core/InputBase';\nimport Search from '@material-ui/icons/Search';\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    inputRoot: {\n      color: 'inherit',\n      flexGrow: 1,\n      width: 'auto'\n    },\n    inputInput: {\n      flexGrow: 1,\n      padding: theme.spacing(1, 1, 1, 0),\n      transition: theme.transitions.create('width'),\n      width: 'auto'\n    },\n    search: {\n      border: \"1px solid black\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(3),\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"auto\",\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }\n  }));\n\n  const SearchBar = (props) => {\n    const classes = useStyles();\n\n    return <div className={classes.search}>\n        <div className={classes.searchIcon}>\n            <Search />\n        </div>\n        <InputBase\n            classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n            }}\n            onChange={props.onChange}\n            onKeyPress={props.onKeyPress}\n            placeholder={typeof props.placeholder == \"undefined\" ? \"Поиск...\" : props.placeholder}\n            value={props.value}\n        />\n    </div>;\n  };\n\n  SearchBar.propTypes = {\n    onChange: PropTypes.func,\n    onKeyPress: PropTypes.func,\n    placeholder: PropTypes.string,\n    value: PropTypes.string.isRequired\n  };\n\n  export default SearchBar;\n  ","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport { deleteOrganization, getOrganizationList } from '../api/api';\nimport SearchableTable from './SearchableTable';\nimport SearchBar from './SearchBar';\n\nconst OrganizationTable = (props) => {\n    const [search, setSearch] = useState({exclude: props.exclude});\n    const [searchName, setSearchName] = useState(\"\");\n\n    const organizationKey = (organization) => organization.id;\n    const organizationRedirection = (organization) => `/organizations/${organization.id}`;\n\n    const searchNameChanged = (event) => setSearchName(event.target.value);\n    const searchKeyPressed = (event) => {\n        if (event.key === \"Enter\")\n            setSearch({exclude: props.exclude, search: searchName});\n    }\n\n    return <>\n        <SearchBar\n            onChange={searchNameChanged}\n            onKeyPress={searchKeyPressed}\n            placeholder=\"Поиск по названию...\"\n            value={searchName}\n        />\n        <SearchableTable\n            countOptions={[5,10,15]}\n            deletion={props.deletion}\n            disassemble={props.disassemble}\n            elementProvider={getOrganizationList}\n            itemRedirection={organizationRedirection}\n            header={props.header}\n            keyProvider={organizationKey}\n            onSelectionChanged={props.onSelectionChanged}\n            selection={props.selection}\n            selected={props.selected}\n            search={search}\n            startFetchCount = {10}\n            removator={deleteOrganization}\n        />\n    </>;\n};\n\nOrganizationTable.propTypes = {\n    deletion: PropTypes.bool.isRequired,\n    disassemble: PropTypes.func.isRequired,\n    exclude: PropTypes.string,\n    header: PropTypes.array.isRequired,\n    selection: PropTypes.bool.isRequired,\n    selected: PropTypes.string,\n    onSelectionChanged: PropTypes.func\n};\n\nexport default OrganizationTable;","import React, {useState}  from 'react';\nimport PropTypes from 'prop-types';\n\nimport { deleteEmployee, getEmployeeList } from '../api/api';\nimport SearchableTable from './SearchableTable';\nimport SearchBar from './SearchBar';\n\nconst EmployeeTable = (props) => {\n    const [search, setSearch] = useState({exclude: props.exclude, orgId: props.orgId});\n    const [searchName, setSearchName] = useState(\"\");\n    const [searchOrg, setSearchOrg] = useState(\"\");\n\n    const employeeKey = (employee) => employee.id;\n    const employeeRedirection = (employee) => `/employees/${employee.id}`;\n\n    const searchNameChanged = (event) => setSearchName(event.target.value);\n    const searchOrgChanged = (event) => setSearchOrg(event.target.value);\n\n    const searchKeyPressed = (event) => {\n        if (event.key === \"Enter\")\n            setSearch({\n                exclude: props.exclude,\n                search: searchName,\n                organization: searchOrg,\n                orgId: props.orgId\n            });\n    }\n\n    return <>\n        <SearchBar\n            onChange={searchNameChanged}\n            onKeyPress={searchKeyPressed}\n            placeholder=\"Поиск по имени...\"\n            value={searchName}\n        />\n        {\n            typeof props.orgId == \"undefined\" ?\n            <SearchBar\n                onChange={searchOrgChanged}\n                onKeyPress={searchKeyPressed}\n                placeholder=\"Поиск по организации...\"\n                value={searchOrg}\n            /> : null\n        }\n        <SearchableTable\n            countOptions={[5,10,15]}\n            deletion={props.deletion}\n            disassemble={props.disassemble}\n            elementProvider={getEmployeeList}\n            itemRedirection={employeeRedirection}\n            header={props.header}\n            keyProvider={employeeKey}\n            onSelectionChanged={props.onSelectionChanged}\n            selection={props.selection}\n            selected={props.selected}\n            search={search}\n            startFetchCount = {10}\n            removator={deleteEmployee}\n        />\n    </>;\n} \n\nEmployeeTable.propTypes = {\n    deletion: PropTypes.bool.isRequired,\n    disassemble: PropTypes.func.isRequired,\n    exclude: PropTypes.string,\n    header: PropTypes.array.isRequired,\n    orgId: PropTypes.string,\n    selection: PropTypes.bool.isRequired,\n    selected: PropTypes.string,\n    onSelectionChanged: PropTypes.func\n};  \n\nexport default EmployeeTable;","import React from 'react';\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport { \n    createEmployee, fetchEmployeeInfo, fetchOrganizationInfo, updateEmployee\n} from '../api/api';\nimport { DialogTitle } from '@material-ui/core';\nimport OrganizationTable from '../components/OrganizationTable';\nimport EmployeeTable from '../components/EmployeeTable';\n\nclass EmployeeEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updating = typeof props.match.params.id != 'undefined';\n        this.state = {\n            chief: null,\n            employee: { \n                id: this.updating ? props.match.params.id: null, name: \"\",\n                organization:null, chief:null\n            },\n            madeChanges: false,\n            openChiefDialog: false,\n            openOrgDialog: false,\n            organization: null,\n            redirect: false,\n            waitingResponse: this.updating,\n            wrongName: true\n        }\n        this.handleResponseOnInfoRequest = this.handleResponseOnInfoRequest.bind(this);\n        this.handleResponseOnOrgInfo = this.handleResponseOnOrgInfo.bind(this);\n        this.handleResponseOnChiefInfo = this.handleResponseOnChiefInfo.bind(this);\n        this.handleResponseOnSubmitRequest = this.handleResponseOnSubmitRequest.bind(this);\n        this.selectedOrganizationChanged = this.selectedOrganizationChanged.bind(this);\n        this.selectedChiefChanged = this.selectedChiefChanged.bind(this);\n        this.onOrgDialogClose = this.onOrgDialogClose.bind(this);\n        this.onChiefDialogClose = this.onChiefDialogClose.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.updating)\n            fetchEmployeeInfo(this.state.employee.id)\n            .then(this.handleResponseOnInfoRequest)\n            .catch(error => this.setState({criticalError: \"Нет соединения с сервером, попробуйте позднее\", waitingResponse:false}));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.employee.organization !== this.state.employee.organization\n            && this.state.employee.organization)\n            this.requestOrgInfo();\n        if (prevState.employee.chief !== this.state.employee.chief\n            && this.state.employee.chief)\n            this.requestChiefInfo();\n    }\n\n    requestOrgInfo = () => \n        fetchOrganizationInfo(this.state.employee.organization)\n            .then(this.handleResponseOnOrgInfo)\n            .catch(error => this.setState({error: \"Соединение с сервером потеряно на неопределённое время\"}));\n\n    handleResponseOnOrgInfo(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => this.setState({organization: json.data.name}));\n                break;\n            }\n            case 404: {\n                this.setState({organization: undefined});\n                break;\n            }\n            default: this.requestParentInfo();\n        }\n    }\n\n    requestChiefInfo = () => \n        fetchEmployeeInfo(this.state.employee.chief)\n            .then(this.handleResponseOnChiefInfo)\n            .catch(error => this.setState({error: \"Соединение с сервером потеряно на неопределённое время\"}));\n\n    handleResponseOnChiefInfo(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => this.setState({chief: json.data.name}));\n                break;\n            }\n            case 404: {\n                this.setState({chief: undefined});\n                break;\n            }\n            default: this.requestParentInfo();\n        }\n    }\n\n    nameChangeHandler = (event) =>\n        this.setState({\n            employee: { ...this.state.employee, name: event.target.value},\n            madeChanges: true,\n            wrongName: !event.target.value\n        });\n\n    handleResponseOnInfoRequest(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => {\n                    this.tempChief = json.data.chief;\n                    this.tempOrganization = json.data.organization;\n                    this.setState({employee: json.data, waitingResponse:false, wrongName: false});\n                });\n                break;\n            }\n            case 404: {\n                this.setState({criticalError: \"Изменяемый сотрудник не найден\", waitingResponse:false});\n                break;\n            }\n            default:\n                this.setState({criticalError: \"При получении информации о сотруднике что-то пошло не так\", waitingResponse:false});\n        }\n    };\n\n    handleResponseOnSubmitRequest(response) {\n        switch(response.status) {\n            case 200:\n            case 201: {\n                this.setState({redirect: true});\n                break;\n            }\n            case 404: {\n                this.setState({criticalError: \"Редактируемый сотрудник уже удален кем-то ещё, советуем вам заняться чем-нибудь другим\"});\n                break;\n            }\n            case 406: {\n                response.json().then(json => this.setState({error: json.data, waitingResponse:false}));\n                break;\n            }\n            default:\n                this.setState({error: \"Попробуйте отправить запрос ещё разок :)\", waitingResponse:false});\n        }\n    }\n\n    tempChief = null;\n    tempOrganization = null;\n\n    selectedChiefChanged = (selection) => this.tempChief = selection;\n    selectedOrganizationChanged = (selection) => this.tempOrganization = selection;\n\n    onOrgDialogClose() {\n        this.setState(\n            {\n                employee: {\n                    ...this.state.employee,\n                    chief: this.tempOrganization === '' || \n                        this.state.employee.organization === this.tempOrganization ? \n                        this.state.employee.chief : null, \n                    organization: this.tempOrganization === '' ? null : this.tempOrganization\n                }, \n                madeChanges: true,\n                openOrgDialog:false,\n                organization: this.tempOrganization === this.state.employee.organization ? this.state.organization : null\n            });\n    }\n\n    onChiefDialogClose() {\n        this.setState(\n            {\n                chief: this.tempChief === this.state.employee.chief ? this.state.chief : null,\n                employee: {\n                    ...this.state.employee, chief: this.tempChief === '' ? null : this.tempChief\n                },\n                madeChanges: true,\n                openChiefDialog:false\n            });\n    }\n\n    orgBtnClicked = () => this.setState({openOrgDialog: true});\n    chiefBtnClicked = () => this.setState({openChiefDialog: true});\n\n    submit() {\n        this.setState({waitingResponse: true});\n        (this.updating ? updateEmployee : createEmployee)(this.state.employee)\n            .then(this.handleResponseOnSubmitRequest)\n            .catch(error => this.setState({error: \"Нет соединения с сервером, попробуйте позднее\", waitingResponse:false}));\n    } \n    \n    static orgHeader = [\n        {id:\"id\", label:\"ID\"}, {id:\"name\", label:\"Название организации\"},\n        {id:\"parentId\", label:\"ID головной организации\"},{id:\"parentName\", label:\"Головная организация\"}];\n    static disassembleOrganization = organization => [\n        {id:\"id\",value:organization.id}, {id:\"name\", value:organization.name}, \n        {id:\"parentId\", value: organization.parentId}, {id:\"parentName\", value: organization.parentName},\n    ];\n    \n    static empHeader = [\n        {id: \"id\", label: \"ID\"}, {id: \"name\", label: \"Имя сотрудника\"},\n        {id:\"orgId\", label: \"ID организации\"}, {id: \"orgName\", label:\"Организация\"},\n        {id:\"chiefId\", label: \"ID руководителя\"}, {id:\"chiefName\", label: \"Руководитель\"}];\n    static disassembleEmployee = employee => [\n        {id: \"id\", value:employee.id}, {id: \"name\", value: employee.name},\n        {id:\"orgId\",value:employee.organization}, {id:\"organizationName\", value: employee.organizationName}, \n        {id:\"chiefId\", value: employee.chief}, {id:\"chiefName\", value:employee.chiefName}\n    ];\n\n    render = () => this.state.redirect ?\n        <Redirect to=\"/employees/list\" /> : (\n            <Box margin=\"auto\">\n                {\n                    this.state.criticalError ? <Alert severity=\"error\">{this.state.criticalError}</Alert> :\n                    this.state.waitingResponse ? <CircularProgress /> :\n                    <>\n                        <FormControl>\n                            { \n                                typeof this.state.error == \"undefined\" ? null : \n                                <Alert severity=\"warning\">{this.state.error}</Alert>\n                            }\n                            <TextField\n                                error={this.state.wrongName}\n                                helperText={this.state.wrongName ? \"Имя не может быть пустым\" : null }\n                                label=\"Имя сотрудника\"\n                                onChange={this.nameChangeHandler}\n                                value={this.state.employee.name}\n                            />\n                            <Button\n                                onClick={this.orgBtnClicked}\n                            >\n                                {\n                                    typeof this.state.organization === \"undefined\" ?\n                                    \"Выбранная организация была кем-то удалена. Советуем поменять ваш выбор\" :\n                                    !this.state.employee.organization ? \"Для сотрудника не выбрано организации\" :\n                                    <>\n                                        {`Идентификатор организации: ${this.state.employee.organization}.`}<br/>\n                                        {`Название ${this.state.organization ? `'${this.state.organization}'` : \"пока загружается\"}`}\n                                    </>\n                                }\n                            </Button>\n                            <Button\n                                onClick={this.chiefBtnClicked}\n                            >\n                                {\n                                    typeof this.state.chief === \"undefined\" ?\n                                    \"Выбранный вами в качестве руководителя сотрудник был кем-то удалён. Советуем поменять ваш выбор\" :\n                                    !this.state.employee.chief ? \"Для сотрудника не выбрано руководителя\" :\n                                    <>\n                                        {`Идентификатор руководителя: ${this.state.employee.chief}.`}<br/>\n                                        {`Имя ${this.state.chief ? `'${this.state.chief}'` : \"пока загружается\"}`}\n                                    </>\n                                }\n                            </Button>\n                            <Button\n                                disabled={this.state.wrongName}\n                                onClick={this.submit}\n                            >\n                                Сохранить\n                            </Button>\n                        </FormControl>\n                        <Dialog onClose={this.onOrgDialogClose} open={this.state.openOrgDialog} maxWidth={false}>\n                            <DialogTitle>Выберите организацию</DialogTitle>\n                            <DialogContent>\n                                <OrganizationTable\n                                    deletion={false}\n                                    disassemble={EmployeeEditor.disassembleOrganization}\n                                    header={EmployeeEditor.orgHeader}\n                                    selected={this.state.employee.organization}\n                                    selection={true}\n                                    onSelectionChanged={this.selectedOrganizationChanged}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                        <Dialog onClose={this.onChiefDialogClose} open={this.state.openChiefDialog} maxWidth={false}>\n                            <DialogTitle>Выберите руководителя</DialogTitle>\n                            <DialogContent>\n                                <EmployeeTable\n                                    deletion={false}\n                                    disassemble={EmployeeEditor.disassembleEmployee}\n                                    exclude={!this.state.employee.id ? undefined : this.state.employee.id}\n                                    header={EmployeeEditor.empHeader}\n                                    selected={this.state.employee.chief}\n                                    selection={true}\n                                    onSelectionChanged={this.selectedChiefChanged}\n                                    orgId={this.state.employee.organization == null ? undefined : this.state.employee.organization}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </>\n                }\n            </Box>\n        );\n};\n\nexport default withRouter(EmployeeEditor);","import React from 'react';\nimport EmployeeTable from '../components/EmployeeTable';\n\nconst EmployeeList = () => {\n    const header = [\n        {id: \"id\", label: \"ID\"}, {id: \"name\", label: \"Имя сотрудника\"},\n        {id:\"orgId\", label: \"ID организации\"}, {id: \"orgName\", label:\"Организация\"},\n        {id:\"chiefId\", label: \"ID руководителя\"}, {id:\"chiefName\", label: \"Руководитель\"}];\n    const disassembleEmployee = employee => [\n        {id: \"id\", value:employee.id}, {id: \"name\", value: employee.name},\n        {id:\"orgId\",value:employee.organization}, {id:\"organizationName\", value: employee.organizationName}, \n        {id:\"chiefId\", value: employee.chief}, {id:\"chiefName\", value:employee.chiefName}\n    ];\n\n    return <EmployeeTable\n        deletion={true}\n        disassemble = {disassembleEmployee}\n        fetchCount = {10}\n        header = {header}\n        selection = {false}\n    />;\n};\n\nexport default EmployeeList;","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Box from '@material-ui/core/Box';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Alert from '@material-ui/lab/Alert';\nimport TreeItem from '@material-ui/lab/TreeItem';\nimport MuiTreeView from '@material-ui/lab/TreeView';\n\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nclass TreeView extends React.Component {\n    static propTypes = {\n        elementProvider: PropTypes.func.isRequired,\n        elementStringifier: PropTypes.func.isRequired,\n        itemPathProvider: PropTypes.func.isRequired,\n        keyProvider: PropTypes.func.isRequired,\n        limit: PropTypes.number,\n        root: PropTypes.string\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            expandedNodes: [],\n            nodes: new Map([[null, { label: props.root, page: 0 }]]),\n            selectedNodes: []\n        }\n        this.expansionStates = new Map();\n        this.handleChildrenResponse = this.handleChildrenResponse.bind(this);\n        this.refreshNodeChildren = this.refreshNodeChildren.bind(this);\n        this.updateNode = this.updateNode.bind(this);\n    }\n    \n    handleChildrenResponse (id, response) {\n        switch (response.status) {\n            case 200: {\n                response.json().then(json => this.updateNode(id, json.data));\n                break;\n            }\n            case 404: {\n                response.json().then(json => this.updateNodeError(id, json.data));\n                break;\n            }\n            default: {\n                this.updateNodeError(id, \"При получении дочерних элементов что-то пошло не так\");\n                break;\n            }\n        }\n    };\n\n    handleSelection = (event, nodeIds) => this.setState({selectedNodes: nodeIds});\n    handleToggle = (event, nodeIds) => {\n        nodeIds.forEach(nodeId => this.nodeExpanded(nodeId === \"\" ? null : nodeId));\n        this.setState({expandedNodes: nodeIds});\n    }\n\n    nodeExpanded(id) {\n        this.expansionStates.set(id, !this.expansionStates.has(id) || !this.expansionStates.get(id));\n        if (this.expansionStates.get(id) && typeof this.state.nodes.get(id).children == \"undefined\")\n            this.requestNodeChildren(id, this.state.nodes.get(id).page);\n    }\n\n    redirectToItem = (id) => this.setState({redirect: this.props.itemPathProvider(id)});\n\n    refreshNodeChildren(id, page) {\n        this.setState({\n            nodes: new Map([\n                ...this.state.nodes, \n                [id, {\n                    ...this.state.nodes.get(id), \n                    children: undefined, \n                    error: null, \n                    page: page, \n                    prevChildren: this.state.nodes.get(id).children, \n                    totalCount: undefined\n                }]\n            ])\n        });\n        this.requestNodeChildren(id, page);\n    }\n\n    requestNodeChildren(id, page) {\n        if (this.state.nodes.get(id).error)\n            this.updateNodeError(null);\n        this.props.elementProvider({\n                id:id?id:undefined, \n                limit:this.props.limit, \n                offset: typeof this.props.limit == \"undefined\" ? undefined : this.props.limit * page\n            })\n            .then((response) => this.handleChildrenResponse(id, response))\n            .catch(error => this.updateNodeError(id, \"Нет соединения с сервером\"));\n    }\n\n    traverseNode = (id) =>\n        <TreeItem\n            key={id ? id : ''}\n            label = {this.state.nodes.get(id).label}\n            nodeId = {id ? id : ''}\n        >\n            <Box>\n                {\n                    id ?\n                    <IconButton onClick={() => this.redirectToItem(id)} size=\"small\">\n                        <EditIcon />\n                    </IconButton> : null\n                }\n                {\n                    typeof this.state.nodes.get(id).children != \"undefined\" ||\n                    this.state.nodes.get(id).error ?\n                    <IconButton onClick={() => this.refreshNodeChildren(id, 0)} size=\"small\">\n                        <RefreshIcon />\n                    </IconButton> : \n                    null\n                }\n            </Box>\n            {\n                typeof this.props.limit != \"undefined\" && this.state.nodes.get(id).page > 0 ?\n                <IconButton onClick={() => this.refreshNodeChildren(id, this.state.nodes.get(id).page - 1)}>\n                    <ArrowUpward />\n                </IconButton> : \n                null\n            }\n            {\n                this.state.nodes.get(id).error ?  \n                <Alert component={Box} margin=\"auto\" severity=\"info\">{this.state.nodes.get(id).error}</Alert> :\n                typeof this.state.nodes.get(id).children == \"undefined\" ?\n                <Box margin=\"auto\"><CircularProgress /></Box> :\n                this.state.nodes.get(id).children.length === 0 ?\n                <Alert component={Box} margin=\"auto\" severity=\"info\">Ничего не найдено</Alert> :\n                this.state.nodes.get(id).children.map(childId => this.traverseNode(childId))\n            }\n            {\n                typeof this.props.limit != \"undefined\" &&\n                    (this.state.nodes.get(id).page + 1) * this.props.limit < this.state.nodes.get(id).totalCount ?\n                <IconButton onClick={() => this.refreshNodeChildren(id, this.state.nodes.get(id).page + 1)}>\n                    <ArrowDownward />\n                </IconButton> : null\n            }\n        </TreeItem>;\n\n    traverseNodeIds = (id) =>\n        [id, ...(\n            typeof this.state.nodes.get(id).children == \"undefined\" ? [] : \n            this.state.nodes.get(id).children.reduce((result, key) => [...result, ...this.traverseNodeIds(key)], [])\n        )];\n\n    updateNode(id, data) {\n        if (!this.state.nodes.has(id))\n            return;\n        const newChildren = data.nodes.map(element => this.props.keyProvider(element.value));\n        const redundantNodeIds = \n            new Set(typeof this.state.nodes.get(id).prevChildren == \"undefined\" ? [] :\n            [...this.state.nodes.get(id).prevChildren.filter(key => !newChildren.includes(key))\n            .reduce((result, key) => [...result, ...this.traverseNodeIds(key)], [])]);\n        this.expansionStates = new Map([...this.expansionStates].filter(pair => !redundantNodeIds.has(pair.key)));\n        this.setState(\n            {\n                selectedNodes: [...this.state.selectedNodes].filter(node => !redundantNodeIds.has(node)),\n                expandedNodes: [...this.state.expandedNodes].filter(node => !redundantNodeIds.has(node)),\n                nodes: new Map([\n                    ...[...this.state.nodes].filter(pair => !redundantNodeIds.has(pair[0])),\n                    [id, {\n                        ...this.state.nodes.get(id),\n                        page: typeof this.state.nodes.get(id).page == \"undefined\" ? 0 : this.state.nodes.get(id).page,\n                        totalCount: data.totalCount,\n                        children: newChildren\n                    }],\n                    ...data.nodes.map(\n                        child => [\n                            this.props.keyProvider(child.value), {\n                                label: this.props.elementStringifier(child.value),\n                                children: child.hasChildren ? undefined : [],\n                                page: 0\n                            }\n                        ]\n                    )])\n            }\n        );\n    };\n\n    updateNodeError = (id, error) => this.setState({\n        nodes: new Map([\n            ...this.state.nodes, \n            [id, {...this.state.nodes.get(id),  error: error}]\n        ])\n    });\n\n    render = () => this.state.redirect ? \n        <Redirect to={this.state.redirect} />: (\n        <MuiTreeView\n            defaultCollapseIcon={<ExpandMoreIcon />}\n            defaultExpandIcon={<ChevronRightIcon />}\n            expanded = {this.state.expandedNodes}\n            selected = {this.state.selectedNodes}\n            onNodeSelect = {this.handleSelection}\n            onNodeToggle = {this.handleToggle}\n        >\n            {this.traverseNode(null)}\n        </MuiTreeView>\n    )\n}\n\nexport default TreeView;","import React from 'react';\n\nimport TreeView from '../components/TreeView';\n\nimport {getEmployeeTree} from '../api/api';\n\nconst EmployeeTree = () => \n    <TreeView\n        elementProvider={getEmployeeTree}\n        elementStringifier={(employee) => employee.name}\n        itemPathProvider={(id) => `/employees/${id}`}\n        keyProvider={(employee) => employee.id} \n        limit={5}\n        root=\"Сотрудники\"\n    />;\n\nexport default EmployeeTree;","import React from 'react';\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nimport Alert from '@material-ui/lab/Alert';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\n\nimport { createOrganization, fetchOrganizationInfo, updateOrganization } from '../api/api';\nimport { DialogTitle } from '@material-ui/core';\nimport OrganizationTable from '../components/OrganizationTable';\n\nclass OrganizationEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.updating = typeof props.match.params.id != 'undefined';\n        this.state = {\n            madeChanges: false,\n            openOrgDialog: false,\n            organization: { id: this.updating ? props.match.params.id: null, name: \"\", parent: null },\n            parent: null,\n            redirect: false,\n            waitingResponse: this.updating,\n            wrongInput: true\n        }\n        this.handleResponseOnInfoRequest = this.handleResponseOnInfoRequest.bind(this);\n        this.handleResponseOnSubmitRequest = this.handleResponseOnSubmitRequest.bind(this);\n        this.selectedParentChanged = this.selectedParentChanged.bind(this);\n        this.onOrgDialogClose = this.onOrgDialogClose.bind(this);\n        this.handleResponseOnParentInfo = this.handleResponseOnParentInfo.bind(this);\n        this.submit = this.submit.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.updating)\n            fetchOrganizationInfo(this.state.organization.id)\n            .then(this.handleResponseOnInfoRequest)\n            .catch(error => this.setState({criticalError: \"Нет соединения с сервером, попробуйте позднее\", waitingResponse:false}));\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevState.organization.parent !== this.state.organization.parent\n            && this.state.organization.parent)\n            this.requestParentInfo();\n    }\n\n    requestParentInfo = () => \n        fetchOrganizationInfo(this.state.organization.parent)\n            .then(this.handleResponseOnParentInfo)\n            .catch(error => this.setState({error: \"Соединение с сервером потеряно на неопределённое время\"}));\n\n    handleResponseOnParentInfo(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => this.setState({parent: json.data.name, wrongInput:false}));\n                break;\n            }\n            case 404: {\n                this.setState({parent: undefined});\n                break;\n            }\n            default: this.requestParentInfo();\n        }\n    }\n\n    nameChangeHandler = (event) =>\n        this.setState({organization: { ...this.state.organization, name: event.target.value}, madeChanges:true, wrongInput: !event.target.value});\n\n    handleResponseOnInfoRequest(response) {\n        switch(response.status) {\n            case 200: {\n                response.json().then(json => {\n                    this.tempParent = json.data.parent;\n                    this.setState({organization: json.data, waitingResponse:false});\n                });\n                break;\n            }\n            case 404: {\n                this.setState({criticalError: 'Изменяемая организация не найдена', waitingResponse:false});\n                break;\n            }\n            default:\n                this.setState({criticalError: 'При получении информации об организации что-то пошло не так', waitingResponse:false});\n        }\n    };\n\n    handleResponseOnSubmitRequest(response) {\n        switch(response.status) {\n            case 200:\n            case 201: {\n                this.setState({redirect: true});\n                break;\n            }\n            case 404: {\n                this.setState({criticalError: \"Редактируемая организация уже удалена кем-то ещё, советуем вам заняться чем-нибудь другим\"})\n                break;\n            }\n            case 406: {\n                response.json().then(json => this.setState({error: json.data, waitingResponse:false, wrongInput:true}));\n                break;\n            }\n            default:\n                this.setState({error: 'Попробуйте отправить запрос ещё разок :)', waitingResponse:false});\n        }\n    }\n\n    tempParent = null;\n\n    selectedParentChanged(selection) {\n        this.tempParent = selection;\n    }\n\n    onOrgDialogClose() {\n        this.setState({organization: {...this.state.organization, parent: this.tempParent !== '' ? this.tempParent : null}, madeChanges:true, openOrgDialog:false});\n    }\n\n    parentBtnClicked = () => this.setState({openOrgDialog: true})\n\n    submit() {\n        this.setState({waitingResponse: true});\n        (this.updating ? updateOrganization : createOrganization)(this.state.organization)\n            .then(this.handleResponseOnSubmitRequest)\n            .catch(error => this.setState({error: 'Нет соединения с сервером, попробуйте позднее', waitingResponse:false}));\n    }\n    \n    static header = [\n        {id:\"id\", label:\"ID\"}, {id:\"name\", label:\"Название организации\"},\n        {id:\"parentId\", label:\"ID головной организации\"},{id:\"parent\", label:\"Головная организация\"}];\n    static disassembleOrganization = organization =>  [\n        {id:\"id\",value:organization.id}, {id:\"name\", value:organization.name}, \n        {id:\"parentId\", value: organization.parentId},{id:\"parentName\", value: organization.parentName}\n    ];\n\n    render = () => this.state.redirect ?\n        <Redirect to=\"/organizations/list\" /> : (\n            <Box margin=\"auto\">\n                {\n                    this.state.criticalError ? <Alert severity=\"error\">{this.state.criticalError}</Alert> :\n                    this.state.waitingResponse ? <CircularProgress /> :\n                    <>\n                        <FormControl>\n                            { \n                                typeof this.state.error == \"undefined\" ? null :\n                                <Alert severity=\"warning\">{this.state.error}</Alert>\n                            }\n                            <TextField\n                                error={this.state.wrongInput}\n                                helperText={this.state.wrongInput ? \"Название не может быть пустым\" : null }\n                                label=\"Название организации\"\n                                onChange={this.nameChangeHandler}\n                                value={this.state.organization.name}\n                            />\n                            <Button\n                                onClick={this.parentBtnClicked}\n                            >\n                                {\n                                    !this.state.organization.parent ? \"Головная организация не выбрана\" :\n                                    typeof this.state.parent === \"undefined\" ?\n                                    \"Выбранная вами в качестве головной организация была кем-то удалена. Советуем поменять ваш выбор\" :\n                                    <>\n                                        {`Идентификатор головной организации: ${this.state.organization.parent}.`}<br/>\n                                        {`Название ${this.state.parent ? `'${this.state.parent}'` : \"пока загружается\"}`}\n                                    </>\n                                }\n                            </Button>\n                            <Button\n                                disabled={this.state.wrongInput}\n                                onClick={this.submit}\n                            >\n                                Сохранить\n                            </Button>\n                        </FormControl>\n                        <Dialog onClose={this.onOrgDialogClose} open={this.state.openOrgDialog} maxWidth={false}>\n                            <DialogTitle>Выберите головную организацию</DialogTitle>\n                            <DialogContent>\n                                <OrganizationTable\n                                    deletion={false}\n                                    disassemble={OrganizationEditor.disassembleOrganization}\n                                    exclude={!this.state.organization.id ? undefined : this.state.organization.id}\n                                    header={OrganizationEditor.header}\n                                    selected={this.state.organization.parent}\n                                    selection={true}\n                                    onSelectionChanged={this.selectedParentChanged}\n                                />\n                            </DialogContent>\n                        </Dialog>\n                    </>\n                }\n            </Box>\n        );\n};\n\nexport default withRouter(OrganizationEditor);","import React from 'react';\nimport OrganizationTable from '../components/OrganizationTable';\n\nconst OrganizationList = () => {\n    const header = [\n        {id:\"id\", label:\"ID\"}, {id:\"name\", label:\"Название организации\"}, {id:\"parentId\", label:\"ID головной организации\"},\n        {id:\"parentName\", label:\"Головная организация\"}, {id:\"countOfEmployees\", label:\"Количество сотрудников\"}];\n    const disassembleOrganization = organization => [\n        {id:\"id\",value:organization.id}, {id:\"name\", value:organization.name},  {id:\"parentId\", value: organization.parentId},\n        {id:\"parentName\", value: organization.parentName}, {id:\"employeeCount\", value:organization.employeeCount}\n    ];\n\n    return <OrganizationTable\n        deletion={true}\n        disassemble = {disassembleOrganization}\n        header = {header}\n        selection = {false}\n    />;\n};\n\nexport default OrganizationList;","import React from 'react';\n\nimport TreeView from '../components/TreeView';\n\nimport {getOrganizationTree} from '../api/api';\n\nconst OrganizationTree = () =>\n    <TreeView\n        elementProvider={getOrganizationTree}\n        elementStringifier={(organization) => organization.name}\n        itemPathProvider={(id) => `/organizations/${id}`}\n        keyProvider={(organization) => organization.id}\n        root=\"Организации\"\n    />;\n\nexport default OrganizationTree;","import React from 'react';\nimport { Switch, Route, NavLink, Redirect } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { AppBar, Box, Button, Toolbar, Card } from '@material-ui/core';\n\nimport EmployeeEditor from '../pages/EmployeeEditor';\nimport EmployeeList from '../pages/EmployeeList';\nimport EmployeeTree from '../pages/EmployeeTree';\nimport OrganizationEditor from '../pages/OrganizationEditor';\nimport OrganizationList from '../pages/OrganizationList';\nimport OrganizationTree from '../pages/OrganizationTree';\n\nconst useStyles = makeStyles((theme) => ({\n  createBtn: {\n    marginLeft: \"auto\"\n  }\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          <Button color=\"inherit\" component={NavLink} to=\"/employees/list\">Список сотрудников</Button>\n          <Button color=\"inherit\" component={NavLink} to=\"/organizations/list\">Список организаций</Button>\n          <Button color=\"inherit\" component={NavLink} to=\"/employees/tree\">Дерево сотрудников</Button>\n          <Button color=\"inherit\" component={NavLink} to=\"/organizations/tree\">Дерево организаций</Button>\n          <Switch>\n            <Route path=\"/employees/list\">\n              <Button classes={{ root: classes.createBtn}} color=\"inherit\" component={NavLink} to=\"/employees/add\">Создать</Button>\n            </Route>\n            <Route path=\"/organizations/list\">\n              <Button classes={{ root: classes.createBtn}} color=\"inherit\" component={NavLink} to=\"/organizations/add\">Создать</Button>\n            </Route> from=\"/\" \n          </Switch>\n        </Toolbar>\n      </AppBar>\n      <Box component={Card} display=\"flex\" flexDirection=\"column\" margin=\"auto\" minHeight=\"50%\" minWidth=\"50%\">\n        <Switch>\n          <Route path=\"/employees/add\">\n            <EmployeeEditor />\n          </Route>\n          <Route path=\"/employees/list\">\n            <EmployeeList />\n          </Route>\n          <Route path=\"/employees/tree\">\n            <EmployeeTree />\n          </Route>\n          <Route path=\"/employees/:id\">\n            <EmployeeEditor />\n          </Route>\n          <Route path=\"/organizations/add\">\n            <OrganizationEditor />\n          </Route>\n          <Route path=\"/organizations/list\">\n            <OrganizationList />\n          </Route>\n          <Route path=\"/organizations/tree\">\n            <OrganizationTree />\n          </Route>\n          <Route path=\"/organizations/:id\">\n            <OrganizationEditor />\n          </Route>\n          <Redirect to=\"/employees/list\"/>\n        </Switch>\n      </Box>\n    </>\n  );\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    window.location.hostname === '[::1]' ||\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { ruRU } from '@material-ui/core/locale';\n\nimport './index.css';\n\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst theme = createMuiTheme(ruRU);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}